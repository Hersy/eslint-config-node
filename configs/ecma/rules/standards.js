const options = {
  maxClassesPerFile: 1,
};

const isFiniteMessage = 'Please use Number.isFinite instead';
const isNanMessage = 'Please use Number.isNaN instead';

export default {
  'accessor-pairs': 'off',
  'array-callback-return': ['error', {
    allowImplicit: true,
  }],
  'arrow-body-style': ['error', 'as-needed', {
    requireReturnForObjectLiteral: false,
  }],
  'block-scoped-var': 'error',
  'class-methods-use-this': 'error',
  complexity: ['warn', {
    max: 12,
    variant: 'modified',
  }],
  'consistent-return': 'error',
  'constructor-super': 'error',
  curly: ['error', 'multi-or-nest'],
  'default-case': ['error', {
    commentPattern: '^no default$',
  }],
  'default-case-last': 'error',
  'default-param-last': 'error',
  'dot-notation': ['error', {
    allowKeywords: true,
  }],
  eqeqeq: ['error', 'always', {
    null: 'ignore',
  }],
  'grouped-accessor-pairs': 'error',
  'guard-for-in': 'error',
  'init-declarations': 'warn',
  'max-classes-per-file': ['error', options.maxClassesPerFile],
  'no-alert': 'warn',
  'no-caller': 'error',
  'no-case-declarations': 'error',
  'no-catch-shadow': 'error',
  'no-class-assign': 'error',
  'no-const-assign': 'error',
  'no-constructor-return': 'error',
  'no-delete-var': 'error',
  'no-div-regex': 'error',
  'no-dupe-class-members': 'error',
  'no-duplicate-imports': 'error',
  'no-else-return': ['error', {
    allowElseIf: false,
  }],
  'no-empty-function': ['error', {
    allow: ['arrowFunctions', 'functions', 'methods'],
  }],
  'no-empty-pattern': 'error',
  'no-empty-static-block': 'error',
  'no-eq-null': 'warn',
  'no-eval': 'error',
  'no-extend-native': 'error',
  'no-extra-bind': 'error',
  'no-extra-label': 'error',
  'no-fallthrough': 'error',
  'no-global-assign': 'error',
  'no-implicit-coercion': ['warn', {
    boolean: true,
    number: true,
    string: true,
    allow: ['!!'],
  }],
  'no-implicit-globals': 'error',
  'no-import-assign': 'error',
  'no-invalid-this': 'error',
  'no-implied-eval': 'error',
  'no-iterator': 'error',
  'no-labels': ['error', {
    allowLoop: false,
    allowSwitch: false,
  }],
  'no-label-var': 'error',
  'no-lone-blocks': 'error',
  'no-loop-func': 'error',
  'no-magic-numbers': ['warn', {
    ignoreArrayIndexes: true,
    ignoreDefaultValues: true,
    ignoreClassFieldInitialValues: true,
    enforceConst: true,
  }],
  'no-multi-str': 'error',
  'no-native-reassign': 'off',
  'no-new': 'error',
  'no-new-func': 'error',
  'no-new-symbol': 'error',
  'no-new-wrappers': 'error',
  'no-nonoctal-decimal-escape': 'error',
  'no-object-constructor': 'warn',
  'no-octal': 'error',
  'no-octal-escape': 'error',
  'no-param-reassign': ['error', {
    props: true,
  }],
  'no-proto': 'error',
  'no-redeclare': 'error',
  'no-restricted-exports': ['error', {
    restrictedNamedExports: ['default', 'then'],
  }],
  'no-restricted-globals': [
    'error',
    { name: 'isFinite', message: 'Use Number.isFinite instead.' },
    { name: 'isNaN', message: 'Use Number.isNaN instead.' },
    { name: 'addEventListener', message: 'Use window.addEventListener instead.' },
    { name: 'blur', message: 'Use window.blur instead.' },
    { name: 'close', message: 'Use window.close instead.' },
    { name: 'closed', message: 'Use window.closed instead.' },
    { name: 'confirm', message: 'Use window.confirm instead.' },
    { name: 'defaultStatus', message: 'Use window.defaultStatus instead.' },
    { name: 'defaultstatus', message: 'Use window.defaultstatus instead.' },
    { name: 'event', message: 'Use window.event instead.' },
    { name: 'external', message: 'Use window.external instead.' },
    { name: 'find', message: 'Use window.find instead.' },
    { name: 'focus', message: 'Use window.focus instead.' },
    { name: 'frameElement', message: 'Use window.frameElement instead.' },
    { name: 'frames', message: 'Use window.frames instead.' },
    { name: 'history', message: 'Use window.history instead.' },
    { name: 'innerHeight', message: 'Use window.innerHeight instead.' },
    { name: 'innerWidth', message: 'Use window.innerWidth instead.' },
    { name: 'length', message: 'Use window.length instead.' },
    { name: 'location', message: 'Use window.location instead.' },
    { name: 'locationbar', message: 'Use window.locationbar instead.' },
    { name: 'menubar', message: 'Use window.menubar instead.' },
    { name: 'moveBy', message: 'Use window.moveBy instead.' },
    { name: 'moveTo', message: 'Use window.moveTo instead.' },
    { name: 'name', message: 'Use window.name instead.' },
    { name: 'onblur', message: 'Use window.onblur instead.' },
    { name: 'onerror', message: 'Use window.onerror instead.' },
    { name: 'onfocus', message: 'Use window.onfocus instead.' },
    { name: 'onload', message: 'Use window.onload instead.' },
    { name: 'onresize', message: 'Use window.onresize instead.' },
    { name: 'onunload', message: 'Use window.onunload instead.' },
    { name: 'open', message: 'Use window.open instead.' },
    { name: 'opener', message: 'Use window.opener instead.' },
    { name: 'opera', message: 'Use window.opera instead.' },
    { name: 'outerHeight', message: 'Use window.outerHeight instead.' },
    { name: 'outerWidth', message: 'Use window.outerWidth instead.' },
    { name: 'pageXOffset', message: 'Use window.pageXOffset instead.' },
    { name: 'pageYOffset', message: 'Use window.pageYOffset instead.' },
    { name: 'parent', message: 'Use window.parent instead.' },
    { name: 'print', message: 'Use window.print instead.' },
    { name: 'removeEventListener', message: 'Use window.removeEventListener instead.' },
    { name: 'resizeBy', message: 'Use window.resizeBy instead.' },
    { name: 'resizeTo', message: 'Use window.resizeTo instead.' },
    { name: 'screen', message: 'Use window.screen instead.' },
    { name: 'screenLeft', message: 'Use window.screenLeft instead.' },
    { name: 'screenTop', message: 'Use window.screenTop instead.' },
    { name: 'screenX', message: 'Use window.screenX instead.' },
    { name: 'screenY', message: 'Use window.screenY instead.' },
    { name: 'scroll', message: 'Use window.scroll instead.' },
    { name: 'scrollbars', message: 'Use window.scrollbars instead.' },
    { name: 'scrollBy', message: 'Use window.scrollBy instead.' },
    { name: 'scrollTo', message: 'Use window.scrollTo instead.' },
    { name: 'scrollX', message: 'Use window.scrollX instead.' },
    { name: 'scrollY', message: 'Use window.scrollY instead.' },
    { name: 'self', message: 'Use window.self instead.' },
    { name: 'status', message: 'Use window.status instead.' },
    { name: 'statusbar', message: 'Use window.statusbar instead.' },
    { name: 'stop', message: 'Use window.stop instead.' },
    { name: 'toolbar', message: 'Use window.toolbar instead.' },
    { name: 'top', message: 'Use window.top instead.' },
  ],
  'no-restricted-imports': 'error',
  'no-restricted-properties': ['error', {
    object: 'arguments',
    property: 'callee',
    message: 'arguments.callee is deprecated',
  }, {
    object: 'global',
    property: 'isFinite',
    message: isFiniteMessage,
  }, {
    object: 'self',
    property: 'isFinite',
    message: isFiniteMessage,
  }, {
    object: 'window',
    property: 'isFinite',
    message: isFiniteMessage,
  }, {
    object: 'global',
    property: 'isNaN',
    message: isNanMessage,
  }, {
    object: 'self',
    property: 'isNaN',
    message: isNanMessage,
  }, {
    object: 'window',
    property: 'isNaN',
    message: isNanMessage,
  }, {
    property: '__defineGetter__',
    message: 'Please use Object.defineProperty instead.',
  }, {
    property: '__defineSetter__',
    message: 'Please use Object.defineProperty instead.',
  }, {
    object: 'Math',
    property: 'pow',
    message: 'Use the exponentiation operator (**) instead.',
  }],
  'no-return-assign': ['error', 'always'],
  'no-return-await': 'error',
  'no-script-url': 'error',
  'no-self-assign': ['error', {
    props: true,
  }],
  'no-self-compare': 'error',
  'no-sequences': 'error',
  'no-setter-return': 'error',
  'no-shadow': 'error',
  'no-shadow-restricted-names': 'error',
  'no-this-before-super': 'error',
  'no-throw-literal': 'error',
  'no-undef': 'error',
  'no-undef-init': 'error',
  'no-undefined': 'error',
  'no-unmodified-loop-condition': 'warn',
  'no-unused-expressions': ['error', {
    allowShortCircuit: false,
    allowTernary: false,
    allowTaggedTemplates: false,
  }],
  'no-unused-labels': 'error',
  'no-unused-private-class-members': 'error',
  'no-unused-vars': 'error',
  'no-use-before-define': ['error', {
    functions: true,
    classes: true,
    variables: true,
  }],
  'no-useless-assignment': 'error',
  'no-useless-call': 'error',
  'no-useless-catch': 'error',
  'no-useless-computed-key': 'error',
  'no-useless-concat': 'error',
  'no-useless-constructor': 'error',
  'no-useless-escape': 'error',
  'no-useless-rename': ['error', {
    ignoreDestructuring: false,
    ignoreImport: false,
    ignoreExport: false,
  }],
  'no-useless-return': 'error',
  'no-var': 'error',
  'no-void': 'error',
  'no-warning-comments': 'off',
  'no-with': 'error',
  'object-shorthand': ['error', 'always', {
    ignoreConstructors: false,
    avoidQuotes: true,
  }],
  'prefer-arrow-callback': ['error', {
    allowNamedFunctions: false,
    allowUnboundThis: true,
  }],
  'prefer-const': ['error', {
    destructuring: 'any',
    ignoreReadBeforeAssign: true,
  }],
  'prefer-destructuring': ['error', {
    VariableDeclarator: {
      array: false,
      object: true,
    },
    AssignmentExpression: {
      array: true,
      object: false,
    },
  }, {
    enforceForRenamedProperties: false,
  }],
  'prefer-named-capture-group': 'warn',
  'prefer-numeric-literals': 'error',
  'prefer-object-has-own': 'warn',
  'prefer-promise-reject-errors': ['error', {
    allowEmptyReject: true,
  }],
  'prefer-reflect': 'off',
  'prefer-regex-literals': ['error', {
    disallowRedundantWrapping: true,
  }],
  'prefer-rest-params': 'error',
  'prefer-spread': 'error',
  'prefer-template': 'error',
  radix: 'error',
  'require-await': 'off',
  'require-unicode-regexp': 'warn',
  'require-yield': 'error',
  'sort-imports': 'off',
  strict: ['error', 'never'],
  'symbol-description': 'error',
  'vars-on-top': 'error',
  yoda: 'error',
};
